import psutil
import requests
import json
import platform
from datetime import datetime

# Function to get CPU usage and health
def get_cpu_info():
    cpu_percent = psutil.cpu_percent(interval=1)
    cpu_cores = psutil.cpu_count(logical=False)  # Physical cores
    cpu_logical = psutil.cpu_count(logical=True)  # Logical cores
    cpu_freq = psutil.cpu_freq()
    
    return {
        'cpu_percent': cpu_percent,
        'cpu_cores': cpu_cores,
        'cpu_logical': cpu_logical,
        'cpu_freq': cpu_freq.current
    }

# Function to get memory usage info
def get_memory_info():
    memory = psutil.virtual_memory()
    return {
        'total_memory': memory.total,
        'used_memory': memory.used,
        'free_memory': memory.free,
        'memory_percent': memory.percent
    }

# Function to get disk usage info
def get_disk_info():
    disk = psutil.disk_usage('/')
    return {
        'total_disk': disk.total,
        'used_disk': disk.used,
        'free_disk': disk.free,
        'disk_percent': disk.percent
    }

# Function to get network info
def get_network_info():
    net = psutil.net_if_addrs()
    return net

# Function to send data to the Flask server on Ubuntu
def send_data_to_ubuntu(data, endpoint):
    try:
        # Make a POST request to send data
        response = requests.post(f'http://192.168.2.5:5000/api/{endpoint}', json=data)
        if response.status_code == 200:
            print(f"Data sent successfully: {response.json()}")
        else:
            print(f"Error sending data: {response.status_code}")
    except requests.exceptions.RequestException as e:
        print(f"Failed to send data: {str(e)}")

# Collect system health information
def collect_system_health():
    health_info = {
        'cpu_info': get_cpu_info(),
        'memory_info': get_memory_info(),
        'disk_info': get_disk_info(),
        'network_info': get_network_info(),
        'event_logs': []  # You can replace this with your custom logs, or fetch from syslog if needed
    }
    
    return health_info

# Collect system health data
system_health_data = collect_system_health()

# Send system health data to Ubuntu Flask server
send_data_to_ubuntu(system_health_data, 'system_health')

# Optionally, collect logs and send them (if applicable)
log_data = {
    'timestamp': datetime.now().isoformat(),
    'details': "Test log entry",
    'classification': "Info",
    'src_ip': "192.168.1.1",
    'dest_ip': "192.168.1.2",
    'device_name': platform.node()
}

send_data_to_ubuntu(log_data, 'logs')